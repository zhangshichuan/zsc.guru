// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  /**
   * 使用Prisma级联而非数据库外键，降低数据库压力
   * 无外键约束时的注意事项：
   * 1. 嵌套语法仅提供语法糖，不保证原子性
   * 2. 每个嵌套操作可能独立提交
   * 3. 需要开发者自行判断何时需要显式事务
   * 例如：
   * await prisma.$transaction([
   * prisma.order.create(...),
   * prisma.payment.create(...)
   * ])
   */
  relationMode = "prisma"
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  createdAt DateTime @default(now()) @db.Timestamp(6)
  content   String?
  published Boolean  @default(false)
  viewCount Int

  authorId Int
  User     User @relation(fields: [authorId], references: [id])

  @@index([authorId])
}

model Profile {
  id  Int     @id @default(autoincrement())
  bio String?

  userId Int  @unique
  User   User @relation(fields: [userId], references: [id])

  @@index([userId])
}

model User {
  id      Int      @id @default(autoincrement())
  name    String?  @db.VarChar(255)
  email   String   @unique @db.VarChar(255)
  Post    Post[]
  Profile Profile?
}
